@model IEnumerable<LazyRecipe.Models.Recipe>
@using LazyRecipe.Models;

@{
    ViewBag.Title = "Recipes";
}
<link href='https://fonts.googleapis.com/css?family=Amiko' rel='stylesheet'>
<div class="container content">
    <div class="row margin-bottom">
        <div class="col-sm-12 col-md-12 col-xs-12">
            <form action="/Recipes" method="get" class="form-inline display-flex">
                <div class="form-group">
                    <div class="input-group" style="width:100%">
                        <input class="form-control" style="height:45px;font-size:18px" id="SearchString" name="SearchString" type="text" value="">
                    </div>
                </div>
                <button type="submit" style="margin-bottom:0px;margin-left:3px" class="btn btn-primary">search</button>
            </form>
        </div>
    </div>
    @foreach (var item in Model)
    {
        <div id="recipe" class="row recipe-item" style="margin-bottom:10px; ">
            <div class="col-md-4 col-sm-12 col-xs-12">
                <a href="/Recipes/Details/@Html.DisplayFor(modelItem => item.RecipeID)"><img class="img-responsive" onerror="this.src='https://i.ytimg.com/vi/XpwMxcnRgEs/maxresdefault.jpg'" src="@Html.DisplayFor(modelItem => item.MainPicture)" /></a>
</div>
            <div class="col-md-6 col-sm-12 col-xs-12">
                <a href="/Recipes/Details/@Html.DisplayFor(modelItem => item.RecipeID)">
                    <h2>@Html.DisplayFor(modelItem => item.RecipeName)</h2></a>
                    <p> Time: @Html.DisplayFor(modelItem => item.Time) minutes</p>
                    <p>
                        <b>Ingredients used:</b>
                        <ul class="ingredient-list">
                            @foreach (Ingredient ingredient in item.Ingredients)
                            {
                                <li>@ingredient.IngredientName</li>
                            }
                        </ul>
                    </p>
</div>
            <div class="col-md-2 col-sm-6 col-xs-12 flex-buttons">
                @Html.ActionLink("Edit", "Edit", new { id = item.RecipeID }, new { @class = "btn btn-sm btn-default", @style ="margin-bottom:4px;" }) 
                @Html.ActionLink("Details", "Details", new { id = item.RecipeID }, new { @class = "btn btn-sm btn-default" ,  @style ="margin-bottom:4px;" }) 
                @Html.ActionLink("Delete", "Delete", new { id = item.RecipeID }, new { @class = "btn btn-sm btn-default", @style ="margin-bottom:4px;" })
            </div>
        </div>
    }
</div>

<script src="https://code.jquery.com/jquery-3.2.1.js"
        integrity="sha256-DZAnKJ/6XZ9si04Hgrsxu/8s717jcIzLy3oi35EouyE="
        crossorigin="anonymous"></script>

<script>
    var elementExists = document.getElementById("recipe");
    if (elementExists == null) {
        $("<center><h1>No recipes found</h1></center>").appendTo("body");
    }
</script>

